{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { format, isNullish, keccak256 } from 'web3-utils';\nimport { FMT_NUMBER, FMT_BYTES } from 'web3-types';\nimport { decodeParameters, encodeEventSignature, encodeFunctionSignature, encodeParameter, encodeParameters, inferTypesAndEncodeParameters, isAbiConstructorFragment, jsonInterfaceMethodToString } from 'web3-eth-abi';\nimport { blockSchema, ALL_EVENTS } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\nexport { decodeEventABI } from 'web3-eth';\nexport const encodeEventABI = (_ref, event, options) => {\n  let {\n    address\n  } = _ref;\n  var _a, _b;\n  const topics = options === null || options === void 0 ? void 0 : options.topics;\n  const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n  const opts = {};\n  if (!isNullish(options === null || options === void 0 ? void 0 : options.fromBlock)) {\n    opts.fromBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.fromBlock, {\n      number: FMT_NUMBER.HEX,\n      bytes: FMT_BYTES.HEX\n    });\n  }\n  if (!isNullish(options === null || options === void 0 ? void 0 : options.toBlock)) {\n    opts.toBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.toBlock, {\n      number: FMT_NUMBER.HEX,\n      bytes: FMT_BYTES.HEX\n    });\n  }\n  if (topics && Array.isArray(topics)) {\n    opts.topics = [...topics];\n  } else {\n    opts.topics = [];\n    // add event signature\n    if (event && !event.anonymous && ![ALL_EVENTS, 'allEvents'].includes(event.name)) {\n      opts.topics.push((_b = event.signature) !== null && _b !== void 0 ? _b : encodeEventSignature(jsonInterfaceMethodToString(event)));\n    }\n    // add event topics (indexed arguments)\n    if (![ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n      for (const input of event.inputs) {\n        if (!input.indexed) {\n          continue;\n        }\n        const value = filter[input.name];\n        if (!value) {\n          // eslint-disable-next-line no-null/no-null\n          opts.topics.push(null);\n          continue;\n        }\n        // TODO: https://github.com/ethereum/web3.js/issues/344\n        // TODO: deal properly with components\n        if (Array.isArray(value)) {\n          opts.topics.push(value.map(v => encodeParameter(input.type, v)));\n        } else if (input.type === 'string') {\n          opts.topics.push(keccak256(value));\n        } else {\n          opts.topics.push(encodeParameter(input.type, value));\n        }\n      }\n    }\n  }\n  if (!opts.topics.length) delete opts.topics;\n  if (address) {\n    opts.address = address.toLowerCase();\n  }\n  return opts;\n};\nexport const encodeMethodABI = (abi, args, deployData) => {\n  const inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n  if (abi.inputs && inputLength !== args.length) {\n    throw new Web3ContractError(\"The number of arguments is not matching the methods required number. You need to pass \".concat(inputLength, \" arguments.\"));\n  }\n  let params;\n  if (abi.inputs) {\n    params = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace('0x', '');\n  } else {\n    params = inferTypesAndEncodeParameters(args).replace('0x', '');\n  }\n  if (isAbiConstructorFragment(abi)) {\n    if (!deployData) throw new Web3ContractError('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n    if (!deployData.startsWith('0x')) {\n      return \"0x\".concat(deployData).concat(params);\n    }\n    return \"\".concat(deployData).concat(params);\n  }\n  return \"\".concat(encodeFunctionSignature(abi)).concat(params);\n};\nexport const decodeMethodReturn = (abi, returnValues) => {\n  // If it was constructor then we need to return contract address\n  if (abi.type === 'constructor') {\n    return returnValues;\n  }\n  if (!returnValues) {\n    // Using \"null\" value intentionally to match legacy behavior\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n  const value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n  if (!abi.outputs) {\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n  const result = decodeParameters([...abi.outputs], value);\n  if (result.__length__ === 1) {\n    return result[0];\n  }\n  return result;\n};","map":{"version":3,"names":["format","isNullish","keccak256","FMT_NUMBER","FMT_BYTES","decodeParameters","encodeEventSignature","encodeFunctionSignature","encodeParameter","encodeParameters","inferTypesAndEncodeParameters","isAbiConstructorFragment","jsonInterfaceMethodToString","blockSchema","ALL_EVENTS","Web3ContractError","decodeEventABI","encodeEventABI","_ref","event","options","address","topics","filter","_a","opts","fromBlock","properties","number","HEX","bytes","toBlock","Array","isArray","anonymous","includes","name","push","_b","signature","inputs","input","indexed","value","map","v","type","length","toLowerCase","encodeMethodABI","abi","args","deployData","inputLength","concat","params","replace","startsWith","decodeMethodReturn","returnValues","slice","outputs","result","__length__"],"sources":["C:\\Users\\SSAFY\\Desktop\\react\\S10P22C208\\frontend_react\\node_modules\\web3-eth-contract\\src\\encoding.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format, isNullish, keccak256 } from 'web3-utils';\n\nimport {\n\tAbiConstructorFragment,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tFilter,\n\tHexString,\n\tTopic,\n\tFMT_NUMBER,\n\tFMT_BYTES,\n\tContractOptions,\n} from 'web3-types';\n\nimport {\n\tdecodeParameters,\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tencodeParameter,\n\tencodeParameters,\n\tinferTypesAndEncodeParameters,\n\tisAbiConstructorFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\n\nimport { blockSchema, ALL_EVENTS } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\n\nexport { decodeEventABI } from 'web3-eth';\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\nexport const encodeEventABI = (\n\t{ address }: ContractOptions,\n\tevent: AbiEventFragment & { signature: string },\n\toptions?: Filter,\n) => {\n\tconst topics = options?.topics;\n\tconst filter = options?.filter ?? {};\n\tconst opts: Writeable<Filter> = {};\n\n\tif (!isNullish(options?.fromBlock)) {\n\t\topts.fromBlock = format(blockSchema.properties.number, options?.fromBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\tif (!isNullish(options?.toBlock)) {\n\t\topts.toBlock = format(blockSchema.properties.number, options?.toBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\n\tif (topics && Array.isArray(topics)) {\n\t\topts.topics = [...topics] as Topic[];\n\t} else {\n\t\topts.topics = [];\n\t\t// add event signature\n\t\tif (event && !event.anonymous && ![ALL_EVENTS, 'allEvents'].includes(event.name)) {\n\t\t\topts.topics.push(\n\t\t\t\tevent.signature ?? encodeEventSignature(jsonInterfaceMethodToString(event)),\n\t\t\t);\n\t\t}\n\n\t\t// add event topics (indexed arguments)\n\t\tif (![ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n\t\t\tfor (const input of event.inputs) {\n\t\t\t\tif (!input.indexed) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst value = filter[input.name];\n\t\t\t\tif (!value) {\n\t\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t\topts.topics.push(null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: https://github.com/ethereum/web3.js/issues/344\n\t\t\t\t// TODO: deal properly with components\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\topts.topics.push(value.map(v => encodeParameter(input.type, v)));\n\t\t\t\t} else if (input.type === 'string') {\n\t\t\t\t\topts.topics.push(keccak256(value as string));\n\t\t\t\t} else {\n\t\t\t\t\topts.topics.push(encodeParameter(input.type, value));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!opts.topics.length) delete opts.topics;\n\n\tif (address) {\n\t\topts.address = address.toLowerCase();\n\t}\n\n\treturn opts;\n};\n\nexport const encodeMethodABI = (\n\tabi: AbiFunctionFragment | AbiConstructorFragment,\n\targs: unknown[],\n\tdeployData?: HexString,\n) => {\n\tconst inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n\tif (abi.inputs && inputLength !== args.length) {\n\t\tthrow new Web3ContractError(\n\t\t\t`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`,\n\t\t);\n\t}\n\n\tlet params: string;\n\tif (abi.inputs) {\n\t\tparams = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace(\n\t\t\t'0x',\n\t\t\t'',\n\t\t);\n\t} else {\n\t\tparams = inferTypesAndEncodeParameters(args).replace('0x', '');\n\t}\n\n\n\tif (isAbiConstructorFragment(abi)) {\n\t\tif (!deployData)\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t'The contract has no contract data option set. This is necessary to append the constructor parameters.',\n\t\t\t);\n\n\t\tif (!deployData.startsWith('0x')) {\n\t\t\treturn `0x${deployData}${params}`;\n\t\t}\n\n\t\treturn `${deployData}${params}`;\n\t}\n\n\treturn `${encodeFunctionSignature(abi)}${params}`;\n};\n\nexport const decodeMethodReturn = (abi: AbiFunctionFragment, returnValues?: HexString) => {\n\t// If it was constructor then we need to return contract address\n\tif (abi.type === 'constructor') {\n\t\treturn returnValues;\n\t}\n\n\tif (!returnValues) {\n\t\t// Using \"null\" value intentionally to match legacy behavior\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\tconst value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n\tif (!abi.outputs) {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\tconst result = decodeParameters([...abi.outputs], value);\n\n\tif (result.__length__ === 1) {\n\t\treturn result[0];\n\t}\n\n\treturn result;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}