{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport WillSystemABI from '../smartContract/will_system.json';\nimport axios from 'axios';\nexport default function IpfsHook(userId) {\n  _s();\n  const IpfsURL = process.env.REACT_APP_IPFS_URL;\n  const BaseURL = process.env.REACT_APP_API_URL;\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [result, setResult] = useState([{}]);\n  const [hash, setHash] = useState('');\n  const [id, setId] = useState('');\n  const [file, setFile] = useState(null);\n  const [uploadImgUrl, setUploadImgUrl] = useState('');\n  const [willCode, setWillCode] = useState('');\n  useEffect(() => {\n    async function init() {\n      // web 3 생성\n      const web3 = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_URL));\n      setWeb3(web3);\n      // 스마트 컨트랙트 설정\n      const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n      const contract = new web3.eth.Contract(WillSystemABI, contractAddress);\n      setContract(contract);\n    }\n    init();\n  }, []); // useEffect \n\n  // 목표 : 코드를 입력하면 블록체인에 저장된 값을 가져온다.\n\n  // 유저아이디로 주소를 가져온다.\n\n  // 주소를 통해 유언을 가져온다\n\n  // 유언을 가져와서 ipfs에 저장된 파일을 가져온다.\n}\n_s(IpfsHook, \"KWWO9S/BkadVOm2I1XP6vBGdF5w=\");\n_c = IpfsHook;\nvar _c;\n$RefreshReg$(_c, \"IpfsHook\");","map":{"version":3,"names":["useState","useEffect","Web3","WillSystemABI","axios","IpfsHook","userId","_s","IpfsURL","process","env","REACT_APP_IPFS_URL","BaseURL","REACT_APP_API_URL","web3","setWeb3","contract","setContract","result","setResult","hash","setHash","id","setId","file","setFile","uploadImgUrl","setUploadImgUrl","willCode","setWillCode","init","providers","HttpProvider","REACT_APP_RPC_URL","contractAddress","REACT_APP_CONTRACT_ADDRESS","eth","Contract","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Desktop/react/S10P22C208/frontend_react/src/hooks/ipfsHook.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport WillSystemABI from '../smartContract/will_system.json';\r\nimport  axios from 'axios';\r\n\r\n\r\nexport default function IpfsHook (userId) {\r\n  const IpfsURL = process.env.REACT_APP_IPFS_URL;\r\n  const BaseURL = process.env.REACT_APP_API_URL;\r\n\r\n  const [web3, setWeb3] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [result, setResult] = useState([{}]);\r\n  const [hash, setHash] = useState('');\r\n  const [id, setId] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [uploadImgUrl, setUploadImgUrl] = useState('');\r\n  const [willCode, setWillCode] = useState('');\r\n  \r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      // web 3 생성\r\n      const web3 = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_URL));\r\n      setWeb3(web3);\r\n      // 스마트 컨트랙트 설정\r\n      const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\n      const contract = new web3.eth.Contract(WillSystemABI, contractAddress);\r\n      setContract(contract);\r\n    }\r\n    init();\r\n  },[]) // useEffect \r\n  \r\n  // 목표 : 코드를 입력하면 블록체인에 저장된 값을 가져온다.\r\n\r\n  // 유저아이디로 주소를 가져온다.\r\n   \r\n  // 주소를 통해 유언을 가져온다\r\n\r\n  // 유언을 가져와서 ipfs에 저장된 파일을 가져온다.\r\n\r\n\r\n} "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAQC,KAAK,MAAM,OAAO;AAG1B,eAAe,SAASC,QAAQA,CAAEC,MAAM,EAAE;EAAAC,EAAA;EACxC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;EAC9C,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB;EAE7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsB,EAAE,EAAEC,KAAK,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACwB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAG5CC,SAAS,CAAC,MAAM;IACd,eAAe6B,IAAIA,CAAA,EAAG;MACpB;MACA,MAAMhB,IAAI,GAAG,IAAIZ,IAAI,CAAC,IAAIA,IAAI,CAAC6B,SAAS,CAACC,YAAY,CAACvB,OAAO,CAACC,GAAG,CAACuB,iBAAiB,CAAC,CAAC;MACrFlB,OAAO,CAACD,IAAI,CAAC;MACb;MACA,MAAMoB,eAAe,GAAGzB,OAAO,CAACC,GAAG,CAACyB,0BAA0B;MAC9D,MAAMnB,QAAQ,GAAG,IAAIF,IAAI,CAACsB,GAAG,CAACC,QAAQ,CAAClC,aAAa,EAAE+B,eAAe,CAAC;MACtEjB,WAAW,CAACD,QAAQ,CAAC;IACvB;IACAc,IAAI,CAAC,CAAC;EACR,CAAC,EAAC,EAAE,CAAC,EAAC;;EAEN;;EAEA;;EAEA;;EAEA;AAGF;AAACvB,EAAA,CApCuBF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}