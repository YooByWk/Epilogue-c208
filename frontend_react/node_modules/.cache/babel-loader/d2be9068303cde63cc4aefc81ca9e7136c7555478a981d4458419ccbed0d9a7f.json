{"ast":null,"code":"import{useState,useEffect}from'react';import Web3 from'web3';import WillSystemABI from'../smartContract/will_system.json';import axios from'axios';export default function IpfsHook(userId){const IpfsURL=process.env.REACT_APP_IPFS_URL;const BaseURL=process.env.REACT_APP_API_URL;const[web3,setWeb3]=useState(null);const[contract,setContract]=useState(null);const[result,setResult]=useState([{}]);const[hash,setHash]=useState('');const[id,setId]=useState('');const[file,setFile]=useState(null);const[uploadImgUrl,setUploadImgUrl]=useState('');const[willCode,setWillCode]=useState('');useEffect(()=>{async function init(){// web 3 생성\nconst web3=new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_URL));setWeb3(web3);// 스마트 컨트랙트 설정\nconst contractAddress=process.env.REACT_APP_CONTRACT_ADDRESS;const contract=new web3.eth.Contract(WillSystemABI,contractAddress);setContract(contract);}init();},[]);// useEffect \n// 목표 : 코드를 입력하면 블록체인에 저장된 값을 가져온다.\n// 유저아이디로 주소를 가져온다.\n// 주소를 통해 유언을 가져온다\n// 유언을 가져와서 ipfs에 저장된 파일을 가져온다.\n}","map":{"version":3,"names":["useState","useEffect","Web3","WillSystemABI","axios","IpfsHook","userId","IpfsURL","process","env","REACT_APP_IPFS_URL","BaseURL","REACT_APP_API_URL","web3","setWeb3","contract","setContract","result","setResult","hash","setHash","id","setId","file","setFile","uploadImgUrl","setUploadImgUrl","willCode","setWillCode","init","providers","HttpProvider","REACT_APP_RPC_URL","contractAddress","REACT_APP_CONTRACT_ADDRESS","eth","Contract"],"sources":["C:/Users/SSAFY/Desktop/react/S10P22C208/frontend/src/hooks/ipfsHook.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport WillSystemABI from '../smartContract/will_system.json';\r\nimport  axios from 'axios';\r\n\r\n\r\nexport default function IpfsHook (userId) {\r\n  const IpfsURL = process.env.REACT_APP_IPFS_URL;\r\n  const BaseURL = process.env.REACT_APP_API_URL;\r\n\r\n  const [web3, setWeb3] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [result, setResult] = useState([{}]);\r\n  const [hash, setHash] = useState('');\r\n  const [id, setId] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [uploadImgUrl, setUploadImgUrl] = useState('');\r\n  const [willCode, setWillCode] = useState('');\r\n  \r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      // web 3 생성\r\n      const web3 = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_URL));\r\n      setWeb3(web3);\r\n      // 스마트 컨트랙트 설정\r\n      const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\n      const contract = new web3.eth.Contract(WillSystemABI, contractAddress);\r\n      setContract(contract);\r\n    }\r\n    init();\r\n  },[]) // useEffect \r\n  \r\n  // 목표 : 코드를 입력하면 블록체인에 저장된 값을 가져온다.\r\n\r\n  // 유저아이디로 주소를 가져온다.\r\n   \r\n  // 주소를 통해 유언을 가져온다\r\n\r\n  // 유언을 가져와서 ipfs에 저장된 파일을 가져온다.\r\n\r\n\r\n} "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,MAAO,CAAAC,aAAa,KAAM,mCAAmC,CAC7D,MAAQ,CAAAC,KAAK,KAAM,OAAO,CAG1B,cAAe,SAAS,CAAAC,QAAQA,CAAEC,MAAM,CAAE,CACxC,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAC9C,KAAM,CAAAC,OAAO,CAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB,CAE7C,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACiB,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1C,KAAM,CAACmB,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACqB,EAAE,CAAEC,KAAK,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAChC,KAAM,CAACuB,IAAI,CAAEC,OAAO,CAAC,CAAGxB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACyB,YAAY,CAAEC,eAAe,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAC2B,QAAQ,CAAEC,WAAW,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CAG5CC,SAAS,CAAC,IAAM,CACd,cAAe,CAAA4B,IAAIA,CAAA,CAAG,CACpB;AACA,KAAM,CAAAhB,IAAI,CAAG,GAAI,CAAAX,IAAI,CAAC,GAAI,CAAAA,IAAI,CAAC4B,SAAS,CAACC,YAAY,CAACvB,OAAO,CAACC,GAAG,CAACuB,iBAAiB,CAAC,CAAC,CACrFlB,OAAO,CAACD,IAAI,CAAC,CACb;AACA,KAAM,CAAAoB,eAAe,CAAGzB,OAAO,CAACC,GAAG,CAACyB,0BAA0B,CAC9D,KAAM,CAAAnB,QAAQ,CAAG,GAAI,CAAAF,IAAI,CAACsB,GAAG,CAACC,QAAQ,CAACjC,aAAa,CAAE8B,eAAe,CAAC,CACtEjB,WAAW,CAACD,QAAQ,CAAC,CACvB,CACAc,IAAI,CAAC,CAAC,CACR,CAAC,CAAC,EAAE,CAAC,CAAC;AAEN;AAEA;AAEA;AAEA;AAGF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}