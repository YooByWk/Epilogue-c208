{"ast":null,"code":"// blockCahin.js\nimport{useState,useEffect}from'react';import Web3 from'web3';import WillSystemABI from'../smartContract/will_system.json';export default function BlockChainLogHook(){const[web3,setWeb3]=useState(null);const[contract,setContract]=useState(null);const[result,setResult]=useState([{}]);console.log(process.env.REACT_APP_API_URL);console.log(process.env.REACT_APP_RPC_URL);console.log(process.env.REACT_APP_CHAIN_ID);console.log('process.env.REACT_APP_CONTRACT_ADDRESS: ',process.env.REACT_APP_CONTRACT_ADDRESS);// console.log(WillSystemABI);\nuseEffect(()=>{async function init(){const web3=new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_URL));setWeb3(web3);const contractAddress=process.env.REACT_APP_CONTRACT_ADDRESS;const contract=new web3.eth.Contract(WillSystemABI,contractAddress);setContract(contract);try{const res=await contract.methods.getLogs().call();setResult(res);console.log(res);}catch(e){console.log(e);}}// init() 함수 끝\ninit();// 비동기 함수 호출\n},[]);return result;}","map":{"version":3,"names":["useState","useEffect","Web3","WillSystemABI","BlockChainLogHook","web3","setWeb3","contract","setContract","result","setResult","console","log","process","env","REACT_APP_API_URL","REACT_APP_RPC_URL","REACT_APP_CHAIN_ID","REACT_APP_CONTRACT_ADDRESS","init","providers","HttpProvider","contractAddress","eth","Contract","res","methods","getLogs","call","e"],"sources":["C:/Users/SSAFY/Desktop/react/S10P22C208/frontend_react/src/hooks/blockChainLog.js"],"sourcesContent":["// blockCahin.js\r\nimport { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport WillSystemABI from '../smartContract/will_system.json';\r\n\r\n\r\n\r\nexport default function BlockChainLogHook () {\r\n\r\n  const [web3, setWeb3] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [result, setResult] = useState([{}]);\r\n\r\n  console.log(process.env.REACT_APP_API_URL);\r\n  console.log(process.env.REACT_APP_RPC_URL);\r\n  console.log(process.env.REACT_APP_CHAIN_ID);\r\n  console.log('process.env.REACT_APP_CONTRACT_ADDRESS: ', process.env.REACT_APP_CONTRACT_ADDRESS);\r\n  // console.log(WillSystemABI);\r\n\r\n  useEffect(() => {\r\n  async function init() {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_URL));\r\n    setWeb3(web3);\r\n\r\n    const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\n    const contract = new web3.eth.Contract(WillSystemABI, contractAddress);\r\n    setContract(contract);\r\n\r\n    try {\r\n      const res = await contract.methods.getLogs().call();\r\n      setResult(res);\r\n      console.log(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    \r\n\r\n\r\n\r\n  } // init() 함수 끝\r\n\r\n  init(); // 비동기 함수 호출\r\n}, []);\r\n  return result\r\n} "],"mappings":"AAAA;AACA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,MAAO,CAAAC,aAAa,KAAM,mCAAmC,CAI7D,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAI,CAE3C,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACO,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAE1CW,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,CAC1CJ,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAACE,iBAAiB,CAAC,CAC1CL,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAACG,kBAAkB,CAAC,CAC3CN,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEC,OAAO,CAACC,GAAG,CAACI,0BAA0B,CAAC,CAC/F;AAEAjB,SAAS,CAAC,IAAM,CAChB,cAAe,CAAAkB,IAAIA,CAAA,CAAG,CACpB,KAAM,CAAAd,IAAI,CAAG,GAAI,CAAAH,IAAI,CAAC,GAAI,CAAAA,IAAI,CAACkB,SAAS,CAACC,YAAY,CAACR,OAAO,CAACC,GAAG,CAACE,iBAAiB,CAAC,CAAC,CACrFV,OAAO,CAACD,IAAI,CAAC,CAEb,KAAM,CAAAiB,eAAe,CAAGT,OAAO,CAACC,GAAG,CAACI,0BAA0B,CAC9D,KAAM,CAAAX,QAAQ,CAAG,GAAI,CAAAF,IAAI,CAACkB,GAAG,CAACC,QAAQ,CAACrB,aAAa,CAAEmB,eAAe,CAAC,CACtEd,WAAW,CAACD,QAAQ,CAAC,CAErB,GAAI,CACF,KAAM,CAAAkB,GAAG,CAAG,KAAM,CAAAlB,QAAQ,CAACmB,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CACnDlB,SAAS,CAACe,GAAG,CAAC,CACdd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC,CAClB,CAAE,MAAOI,CAAC,CAAE,CACVlB,OAAO,CAACC,GAAG,CAACiB,CAAC,CAAC,CAChB,CAKF,CAAE;AAEFV,IAAI,CAAC,CAAC,CAAE;AACV,CAAC,CAAE,EAAE,CAAC,CACJ,MAAO,CAAAV,MAAM,CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}